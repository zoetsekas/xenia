<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="metamodel" version="12.0.0.2017041100">
  <ownedViewpoints name="MetaModelViewpoint" label="Meta Model Viewpoint" modelFileExtension="information">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="InformationDiagram" label="Domain Diagram" initialisation="true" domainClass="Domain" enablePopupBars="true">
      <metamodel href="http://zoe.tsekas.com/language/architecture/information#/"/>
      <metamodel href="http://zoe.tsekas.com/language/foundation/datatype#/"/>
      <metamodel href="http://zoe.tsekas.com/language/foundation/relationship#/"/>
      <metamodel href="http://zoe.tsekas.com/language/foundation/structure#/"/>
      <defaultLayer name="Default">
        <nodeMappings name="AttributeNode" label="Attribute" labelDirectEdit="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editMetaNamedElementName']" createElements="false" domainClass="Attribute">
          <style xsi:type="style:SquareDescription" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ExtensionEdge" label="Extension Edge" sourceMapping="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@containerMappings[name='EntityContainer']" targetMapping="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@containerMappings[name='ConceptContainer']" targetFinderExpression="aql:self.target" sourceFinderExpression="aql:self.source" domainClass="Extension" useDomainElement="true">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="2" routingStyle="tree">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="SubDomainContainer" label="Sub Domain" labelDirectEdit="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editMetaNamedElementName']" createElements="false" domainClass="SubDomain">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="ConceptContainer" label="Concept" labelDirectEdit="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editMetaNamedElementName']" createElements="false" domainClass="Concept" reusedBorderedNodeMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@nodeMappings[name='AttributeNode']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="EntityContainer" label="Entity" labelDirectEdit="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editMetaNamedElementName']" createElements="false" domainClass="Entity" reusedBorderedNodeMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@nodeMappings[name='AttributeNode']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="createInformationClass" label="Structures">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createSubDomain" label="Sub Domain" containerMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@containerMappings[name='SubDomainContainer']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="SubDomain" referenceName="packagedElements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Sub Domain'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="identifier" valueExpression="service:getIdentifier"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createConcept" label="Concept" containerMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@containerMappings[name='ConceptContainer']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Concept" referenceName="packagedElements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Concept'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createEntity" label="Entity" containerMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@containerMappings[name='EntityContainer']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Entity" referenceName="packagedElements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Entity'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createAttribute" label="Attribute" nodeMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@nodeMappings[name='AttributeNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Attribute" referenceName="ownedProperties">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Attribute'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="editMetaNamedElementName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="createExtension" label="Extension" edgeMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@defaultLayer/@edgeMappings[name='ExtensionEdge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Extension" referenceName="extension">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Extension'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="productLayer" label="Financial Product">
        <containerMappings name="TradeLegNode" label="Trade Leg" domainClass="TradeLeg"/>
        <toolSections name="ProductTool" label="Product Structures">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createTradeLeg" containerMappings="//@ownedViewpoints[name='MetaModelViewpoint']/@ownedRepresentations[name='InformationDiagram']/@additionalLayers[name='productLayer']/@containerMappings[name='TradeLegNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TradeLeg" referenceName="packagedElements">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Entity'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="com.tsekas.metamodel.ui.service.General"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="sirius_default_rules_properties">
    <categories name="Default">
      <pages name="sirius_default_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" groups="//@extensions.0/@categories.0/@groups.0"/>
      <groups name="sirius_default_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
